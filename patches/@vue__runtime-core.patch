diff --git a/dist/runtime-core.cjs.js b/dist/runtime-core.cjs.js
index f03c4d7981486ef3ef91b0cac0be1fdbe5e4b065..bd5358c5a8b7afd2a2cb7d4839fa9a56205aa5b0 100644
--- a/dist/runtime-core.cjs.js
+++ b/dist/runtime-core.cjs.js
@@ -3051,7 +3051,7 @@ const publicPropertiesMap = (
       queueJob(i.update);
     }),
     $nextTick: (i) => i.n || (i.n = nextTick.bind(i.proxy)),
-    $watch: (i) => instanceWatch.bind(i) 
+    $watch: (i) => instanceWatch.bind(i)
   })
 );
 const isReservedPrefix = (key) => key === "_" || key === "$";
@@ -4237,7 +4237,7 @@ function resolvePropValue(options, props, key, value, instance, isAbsent) {
     }
     if (opt[0 /* shouldCast */]) {
       if (isAbsent && !hasDefault) {
-        value = false;
+        value = void 0;
       } else if (opt[1 /* shouldCastTrue */] && (value === "" || value === shared.hyphenate(key))) {
         value = true;
       }
@@ -6133,14 +6133,14 @@ function watchPostEffect(effect, options) {
   return doWatch(
     effect,
     null,
-    shared.extend({}, options, { flush: "post" }) 
+    shared.extend({}, options, { flush: "post" })
   );
 }
 function watchSyncEffect(effect, options) {
   return doWatch(
     effect,
     null,
-    shared.extend({}, options, { flush: "sync" }) 
+    shared.extend({}, options, { flush: "sync" })
   );
 }
 function watch(source, cb, options) {
diff --git a/dist/runtime-core.cjs.prod.js b/dist/runtime-core.cjs.prod.js
index e87030b39204865788ba75bb959e9ccb5d8da90c..d781b8baeb93c84c32da1d70e8cb73fa325fddbe 100644
--- a/dist/runtime-core.cjs.prod.js
+++ b/dist/runtime-core.cjs.prod.js
@@ -2366,7 +2366,7 @@ const publicPropertiesMap = (
       queueJob(i.update);
     }),
     $nextTick: (i) => i.n || (i.n = nextTick.bind(i.proxy)),
-    $watch: (i) => instanceWatch.bind(i) 
+    $watch: (i) => instanceWatch.bind(i)
   })
 );
 const hasSetupBinding = (state, key) => state !== shared.EMPTY_OBJ && !state.__isScriptSetup && shared.hasOwn(state, key);
@@ -3243,7 +3243,7 @@ function resolvePropValue(options, props, key, value, instance, isAbsent) {
     }
     if (opt[0 /* shouldCast */]) {
       if (isAbsent && !hasDefault) {
-        value = false;
+        value = void 0;
       } else if (opt[1 /* shouldCastTrue */] && (value === "" || value === shared.hyphenate(key))) {
         value = true;
       }
diff --git a/dist/runtime-core.esm-bundler.js b/dist/runtime-core.esm-bundler.js
index ba76e895be0e3f72689c2f0b20db80b5af7ec404..bf367d1da11be65c0631e8e06434b74abf9afdeb 100644
--- a/dist/runtime-core.esm-bundler.js
+++ b/dist/runtime-core.esm-bundler.js
@@ -4259,7 +4259,7 @@ function resolvePropValue(options, props, key, value, instance, isAbsent) {
     }
     if (opt[0 /* shouldCast */]) {
       if (isAbsent && !hasDefault) {
-        value = false;
+        value = void 0;
       } else if (opt[1 /* shouldCastTrue */] && (value === "" || value === hyphenate(key))) {
         value = true;
       }
